{
  "config": {
    "filename": "FileScopeMCP-tree.json",
    "baseDirectory": "/home/user/mcp/FileScopeMCP",
    "projectRoot": "/home/user/mcp/FileScopeMCP",
    "lastUpdated": "2025-04-03T05:00:48.335Z"
  },
  "fileTree": {
    "path": "/home/user/mcp/FileScopeMCP",
    "name": "FileScopeMCP",
    "isDirectory": true,
    "children": [
      {
        "path": "/home/user/mcp/FileScopeMCP/FileScopeMCP-diagram.html",
        "name": "FileScopeMCP-diagram.html",
        "isDirectory": false,
        "importance": 0,
        "dependencies": [],
        "packageDependencies": [],
        "dependents": [],
        "summary": "HTML file containing a Mermaid-generated diagram of the project's file structure and dependencies. Provides a visual representation of the codebase architecture."
      },
      {
        "path": "/home/user/mcp/FileScopeMCP/FileScopeMCP-diagram.png",
        "name": "FileScopeMCP-diagram.png",
        "isDirectory": false,
        "importance": 0,
        "dependencies": [],
        "packageDependencies": [],
        "dependents": [],
        "summary": "PNG image of the project's file structure and dependencies diagram. Provides a static visual representation of the codebase architecture in image format."
      },
      {
        "path": "/home/user/mcp/FileScopeMCP/LICENSE",
        "name": "LICENSE",
        "isDirectory": false,
        "importance": 0,
        "dependencies": [],
        "packageDependencies": [],
        "dependents": [],
        "summary": "Legal license document defining the terms under which the FileScopeMCP software can be used, modified, and distributed."
      },
      {
        "path": "/home/user/mcp/FileScopeMCP/README.md",
        "name": "README.md",
        "isDirectory": false,
        "importance": 2,
        "dependencies": [],
        "packageDependencies": [],
        "dependents": [],
        "summary": "Project documentation explaining FileScopeMCP's purpose, features, and usage instructions. Includes setup guide and information about available tools and functionality."
      },
      {
        "path": "/home/user/mcp/FileScopeMCP/build.bat",
        "name": "build.bat",
        "isDirectory": false,
        "importance": 0,
        "dependencies": [],
        "packageDependencies": [],
        "dependents": [],
        "summary": "Batch script for building the project on Windows systems. Compiles TypeScript code to JavaScript and performs necessary setup steps."
      },
      {
        "path": "/home/user/mcp/FileScopeMCP/build.sh",
        "name": "build.sh",
        "isDirectory": false,
        "importance": 0,
        "dependencies": [],
        "packageDependencies": [],
        "dependents": [],
        "summary": "Shell script for building the project on Unix-like systems. Compiles TypeScript code to JavaScript and performs necessary setup steps."
      },
      {
        "path": "/home/user/mcp/FileScopeMCP/config.json",
        "name": "config.json",
        "isDirectory": false,
        "importance": 3,
        "dependencies": [],
        "packageDependencies": [],
        "dependents": [],
        "summary": "Application configuration file defining exclude patterns for files/directories and file watching settings. Controls which files are included in the file tree and how file system changes are handled."
      },
      {
        "path": "/home/user/mcp/FileScopeMCP/dist",
        "name": "dist",
        "isDirectory": true,
        "children": []
      },
      {
        "path": "/home/user/mcp/FileScopeMCP/logs",
        "name": "logs",
        "isDirectory": true,
        "children": []
      },
      {
        "path": "/home/user/mcp/FileScopeMCP/mcp.json",
        "name": "mcp.json",
        "isDirectory": false,
        "importance": 1,
        "dependencies": [],
        "packageDependencies": [],
        "dependents": [],
        "summary": "Configuration file for the Model Context Protocol integration. Defines the tool's metadata, command details, and parameters for Cursor integration."
      },
      {
        "path": "/home/user/mcp/FileScopeMCP/mcp.json.linux",
        "name": "mcp.json.linux",
        "isDirectory": false,
        "importance": 0,
        "dependencies": [],
        "packageDependencies": [],
        "dependents": [],
        "summary": "Linux-specific configuration file for the Model Context Protocol integration. Contains path adjustments and settings specific to Linux environments."
      },
      {
        "path": "/home/user/mcp/FileScopeMCP/mcp.json.win.txt",
        "name": "mcp.json.win.txt",
        "isDirectory": false,
        "importance": 0,
        "dependencies": [],
        "packageDependencies": [],
        "dependents": [],
        "summary": "Windows-specific configuration file for the Model Context Protocol integration. Contains path adjustments and settings specific to Windows environments."
      },
      {
        "path": "/home/user/mcp/FileScopeMCP/package.json",
        "name": "package.json",
        "isDirectory": false,
        "importance": 3,
        "dependencies": [],
        "packageDependencies": [],
        "dependents": [],
        "summary": "Node.js package configuration defining dependencies, scripts, and metadata for the FileScopeMCP project. Lists required libraries including the Model Context Protocol SDK."
      },
      {
        "path": "/home/user/mcp/FileScopeMCP/run.sh",
        "name": "run.sh",
        "isDirectory": false,
        "importance": 0,
        "dependencies": [],
        "packageDependencies": [],
        "dependents": [],
        "summary": "Shell script for running the FileScopeMCP server. Sets up environment variables and launches the Node.js process with the compiled server code."
      },
      {
        "path": "/home/user/mcp/FileScopeMCP/src",
        "name": "src",
        "isDirectory": true,
        "children": [
          {
            "path": "/home/user/mcp/FileScopeMCP/src/config-utils.ts",
            "name": "config-utils.ts",
            "isDirectory": false,
            "importance": 8,
            "dependencies": [
              "/home/user/mcp/FileScopeMCP/src/types.ts"
            ],
            "packageDependencies": [
              {
                "name": "fs",
                "path": "/home/user/mcp/FileScopeMCP/node_modules/fs/promises"
              },
              {
                "name": "path",
                "path": "/home/user/mcp/FileScopeMCP/node_modules/path"
              },
              {
                "name": "zod",
                "path": "/home/user/mcp/FileScopeMCP/node_modules/zod",
                "version": "^3.22.4"
              }
            ],
            "dependents": [
              "/home/user/mcp/FileScopeMCP/src/mcp-server.ts"
            ],
            "summary": "Provides utilities for loading, validating, and managing application configuration. Uses Zod for schema validation and handles configuration merging from CLI arguments and configuration files."
          },
          {
            "path": "/home/user/mcp/FileScopeMCP/src/file-utils.ts",
            "name": "file-utils.ts",
            "isDirectory": false,
            "importance": 9,
            "dependencies": [
              "/home/user/mcp/FileScopeMCP/src/types.ts",
              "/home/user/mcp/FileScopeMCP/src/storage-utils.ts",
              "/home/user/mcp/FileScopeMCP/src/global-state.ts",
              "/home/user/mcp/FileScopeMCP/src/storage-utils.ts",
              "/home/user/mcp/FileScopeMCP/src/logger.ts"
            ],
            "packageDependencies": [
              {
                "name": "fs",
                "path": "/home/user/mcp/FileScopeMCP/node_modules/fs"
              },
              {
                "name": "fs",
                "path": "/home/user/mcp/FileScopeMCP/node_modules/fs/promises"
              },
              {
                "name": "path",
                "path": "/home/user/mcp/FileScopeMCP/node_modules/path"
              },
              {
                "name": "fs",
                "path": "/home/user/mcp/FileScopeMCP/node_modules/fs"
              },
              {
                "name": "firebase",
                "path": "/home/user/mcp/FileScopeMCP/node_modules/firebase/auth"
              },
              {
                "name": "${importPath}",
                "path": "/home/user/mcp/FileScopeMCP/node_modules/${importPath}"
              }
            ],
            "dependents": [
              "/home/user/mcp/FileScopeMCP/src/mcp-server.ts"
            ],
            "summary": "Provides utility functions for file operations, such as scanning directories, resolving import paths, and calculating file importance. Handles file dependency analysis and implements safeguards against unresolved template literals."
          },
          {
            "path": "/home/user/mcp/FileScopeMCP/src/global-state.ts",
            "name": "global-state.ts",
            "isDirectory": false,
            "importance": 10,
            "dependencies": [
              "/home/user/mcp/FileScopeMCP/src/types.ts"
            ],
            "packageDependencies": [
              {
                "name": "fs",
                "path": "/home/user/mcp/FileScopeMCP/node_modules/fs"
              },
              {
                "name": "path",
                "path": "/home/user/mcp/FileScopeMCP/node_modules/path"
              }
            ],
            "dependents": [
              "/home/user/mcp/FileScopeMCP/src/file-utils.ts",
              "/home/user/mcp/FileScopeMCP/src/mcp-server.ts",
              "/home/user/mcp/FileScopeMCP/src/storage-utils.ts",
              "/home/user/mcp/FileScopeMCP/src/types.ts"
            ],
            "summary": "Manages global application state including project root path and configuration. Provides functions to get and set configuration values and handles loading of custom exclusion patterns from external files."
          },
          {
            "path": "/home/user/mcp/FileScopeMCP/src/grouping-rules.ts",
            "name": "grouping-rules.ts",
            "isDirectory": false,
            "importance": 7,
            "dependencies": [
              "/home/user/mcp/FileScopeMCP/src/types.ts"
            ],
            "packageDependencies": [
              {
                "name": "path",
                "path": "/home/user/mcp/FileScopeMCP/node_modules/path"
              }
            ],
            "dependents": [],
            "summary": "Defines rules for grouping nodes in diagrams based on different criteria such as directories, dependencies, or custom conditions. Used by the Mermaid diagram generator to organize complex file trees."
          },
          {
            "path": "/home/user/mcp/FileScopeMCP/src/layout-engine.ts",
            "name": "layout-engine.ts",
            "isDirectory": false,
            "importance": 6,
            "dependencies": [
              "/home/user/mcp/FileScopeMCP/src/types.ts"
            ],
            "packageDependencies": [],
            "dependents": [],
            "summary": "Implements layouts for node positioning in diagrams, handling parent-child relationships and dependency relationships. Calculates optimal node placement and manages diagram layout direction."
          },
          {
            "path": "/home/user/mcp/FileScopeMCP/src/logger.ts",
            "name": "logger.ts",
            "isDirectory": false,
            "importance": 8,
            "dependencies": [],
            "packageDependencies": [
              {
                "name": "fs",
                "path": "/home/user/mcp/FileScopeMCP/node_modules/fs"
              },
              {
                "name": "path",
                "path": "/home/user/mcp/FileScopeMCP/node_modules/path"
              }
            ],
            "dependents": [
              "/home/user/mcp/FileScopeMCP/src/file-utils.ts",
              "/home/user/mcp/FileScopeMCP/src/mcp-server.ts"
            ],
            "summary": "Provides logging functionality for the application, writing messages to both console and file. Includes timestamp formatting and manages log file creation and rotation."
          },
          {
            "path": "/home/user/mcp/FileScopeMCP/src/mcp-server.ts",
            "name": "mcp-server.ts",
            "isDirectory": false,
            "importance": 10,
            "dependencies": [
              "/home/user/mcp/FileScopeMCP/src/types.ts",
              "/home/user/mcp/FileScopeMCP/src/file-utils.ts",
              "/home/user/mcp/FileScopeMCP/src/storage-utils.ts",
              "/home/user/mcp/FileScopeMCP/src/mermaid-generator.ts",
              "/home/user/mcp/FileScopeMCP/src/global-state.ts",
              "/home/user/mcp/FileScopeMCP/src/config-utils.ts",
              "/home/user/mcp/FileScopeMCP/src/logger.ts"
            ],
            "packageDependencies": [
              {
                "name": "@modelcontextprotocol/sdk",
                "path": "/home/user/mcp/FileScopeMCP/node_modules/@modelcontextprotocol/sdk/server/mcp.ts",
                "scope": "@modelcontextprotocol",
                "version": "^1.8.0"
              },
              {
                "name": "@modelcontextprotocol/sdk",
                "path": "/home/user/mcp/FileScopeMCP/node_modules/@modelcontextprotocol/sdk/types.ts",
                "scope": "@modelcontextprotocol",
                "version": "^1.8.0"
              },
              {
                "name": "@modelcontextprotocol/sdk",
                "path": "/home/user/mcp/FileScopeMCP/node_modules/@modelcontextprotocol/sdk/shared/transport.ts",
                "scope": "@modelcontextprotocol",
                "version": "^1.8.0"
              },
              {
                "name": "@modelcontextprotocol/sdk",
                "path": "/home/user/mcp/FileScopeMCP/node_modules/@modelcontextprotocol/sdk/shared/stdio.ts",
                "scope": "@modelcontextprotocol",
                "version": "^1.8.0"
              },
              {
                "name": "zod",
                "path": "/home/user/mcp/FileScopeMCP/node_modules/zod",
                "version": "^3.22.4"
              },
              {
                "name": "fs",
                "path": "/home/user/mcp/FileScopeMCP/node_modules/fs/promises"
              },
              {
                "name": "path",
                "path": "/home/user/mcp/FileScopeMCP/node_modules/path"
              },
              {
                "name": "fs",
                "path": "/home/user/mcp/FileScopeMCP/node_modules/fs"
              }
            ],
            "dependents": [],
            "summary": "The main server implementation using the Model Context Protocol SDK. Handles CLI arguments, initializes the file tree, and exposes various tools for file management, tree manipulation, and diagram generation."
          },
          {
            "path": "/home/user/mcp/FileScopeMCP/src/mermaid-generator.ts",
            "name": "mermaid-generator.ts",
            "isDirectory": false,
            "importance": 9,
            "dependencies": [
              "/home/user/mcp/FileScopeMCP/src/types.ts"
            ],
            "packageDependencies": [
              {
                "name": "path",
                "path": "/home/user/mcp/FileScopeMCP/node_modules/path"
              }
            ],
            "dependents": [
              "/home/user/mcp/FileScopeMCP/src/mcp-server.ts"
            ],
            "summary": "Generates Mermaid diagrams from file trees to visualize dependencies and structures. Supports different diagram styles, layout configurations, and node grouping strategies."
          },
          {
            "path": "/home/user/mcp/FileScopeMCP/src/storage-utils.ts",
            "name": "storage-utils.ts",
            "isDirectory": false,
            "importance": 10,
            "dependencies": [
              "/home/user/mcp/FileScopeMCP/src/types.ts",
              "/home/user/mcp/FileScopeMCP/src/global-state.ts"
            ],
            "packageDependencies": [
              {
                "name": "fs",
                "path": "/home/user/mcp/FileScopeMCP/node_modules/fs/promises"
              },
              {
                "name": "path",
                "path": "/home/user/mcp/FileScopeMCP/node_modules/path"
              },
              {
                "name": "fs",
                "path": "/home/user/mcp/FileScopeMCP/node_modules/fs"
              }
            ],
            "dependents": [
              "/home/user/mcp/FileScopeMCP/src/file-utils.ts",
              "/home/user/mcp/FileScopeMCP/src/mcp-server.ts"
            ],
            "summary": "Provides utilities for saving and loading file trees to/from disk. Manages file path normalization, directory creation, and maintains a cache of loaded file trees for performance."
          },
          {
            "path": "/home/user/mcp/FileScopeMCP/src/types.ts",
            "name": "types.ts",
            "isDirectory": false,
            "importance": 10,
            "dependencies": [
              "/home/user/mcp/FileScopeMCP/src/global-state.ts"
            ],
            "packageDependencies": [],
            "dependents": [
              "/home/user/mcp/FileScopeMCP/src/config-utils.ts",
              "/home/user/mcp/FileScopeMCP/src/file-utils.ts",
              "/home/user/mcp/FileScopeMCP/src/global-state.ts",
              "/home/user/mcp/FileScopeMCP/src/grouping-rules.ts",
              "/home/user/mcp/FileScopeMCP/src/layout-engine.ts",
              "/home/user/mcp/FileScopeMCP/src/mcp-server.ts",
              "/home/user/mcp/FileScopeMCP/src/mermaid-generator.ts",
              "/home/user/mcp/FileScopeMCP/src/storage-utils.ts"
            ],
            "summary": "Defines the core data structures and types used throughout the application, including FileNode, PackageDependency, and Mermaid diagram configuration classes. Contains implementations for handling template literals in import paths."
          }
        ]
      },
      {
        "path": "/home/user/mcp/FileScopeMCP/tsconfig.json",
        "name": "tsconfig.json",
        "isDirectory": false,
        "importance": 3,
        "dependencies": [],
        "packageDependencies": [],
        "dependents": [],
        "summary": "TypeScript compiler configuration for the project. Sets module system, target ECMAScript version, output directory, and other compiler options."
      }
    ]
  }
}